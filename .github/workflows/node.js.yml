# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: Bump release version
      id: bump_version
      run: |
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git config user.name "$GITHUB_ACTOR"
        npm version $(node build/bump-version)
    - name: Get release version
      id: get_version
      run: echo ::set-env name=RELEASE_VERSION::$(node -p "require('./package.json').version")
    - name: Push release info
      id: push_release
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY" --tags
    - uses: jsmrcaga/action-netlify-deploy@master
      with:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_DEPLOY_MESSAGE: "Prod deploy v${{ github.ref }}"
        NETLIFY_DEPLOY_TO_PROD: true
        build_directory: out
    - name: Publish to Docker Hub
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: simonwjackson/falsete
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildoptions: "--compress --force-rm"
        tags: "latest,${{ env.RELEASE_VERSION }}"

